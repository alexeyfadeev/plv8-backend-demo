version: "3.9"

x-logging-rules: &logging-rules
  logging:
    driver: "json-file"
    options:
      max-size: 20m
      max-file: "5"

networks:
  backend:
    name: backend-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.16.238.0/24"

volumes:
  db-data:
  db-data-dump:

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      MODULE_NAME: ${MODULE_NAME}
      DLL_NAME: ${DLL_NAME}
    depends_on: 
      - node_scripts
      - database
    ports:
      - "$APP_PORT:80"
    restart: unless-stopped

  database:
    build:
      context: ./db/postgresql
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    container_name: postgresql
    volumes:
      - db-data:/var/lib/postgresql/data
      - db-data-dump:/docker-entrypoint-initdb.d/
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      backend:
        ipv4_address: 172.16.238.3
    restart: unless-stopped
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER
      interval: 5s
      timeout: 5s
      start_period: 10s
      retries: 10
    <<: *logging-rules

  node_scripts:
    build:
      context: ./db/node
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      PLV8_POSTGRES_USER: ${PLV8_POSTGRES_USER}
      PLV8_POSTGRES_PASSWORD: ${PLV8_POSTGRES_PASSWORD}
      ADMIN_USER: ${POSTGRES_USER}
      ADMIN_PASSWORD: ${POSTGRES_PASSWORD}
      PLV8_POSTGRES_HOST: ${POSTGRES_HOST}
      PLV8_POSTGRES_PORT: 5432
      PLV8_DB_NAME: ${DB_NAME}
      DUMP_FILE: ${DUMP_FILE}
    depends_on:
      database:
        condition: service_healthy
    networks:
      - backend
    <<: *logging-rules
